/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import java.net.InetAddress;
import java.sql.Connection;
import java.util.Calendar;
import java.util.Observable;
import java.util.Observer;
import sources.Cliente;
import sources.ConexionBD;
import sources.Insertar;
import sources.Servidor;


/**
 *
 * @author chuch
 */
public class Maestro extends javax.swing.JFrame implements Observer{

    private InetAddress ip_cliente;
    private static ConexionBD con;
    private static Connection conR;
    /**
     * Creates new form Maestro
     */
    public Maestro() {
        initComponents();   
        conR=con.ConexionReloj();
        Servidor s = new Servidor(5008);
        s.addObserver(this);//Agraga a quien va a observar
        System.out.println(ip_cliente);
        Thread t = new Thread(s);
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Servidor");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jLabel1)
                .addContainerGap(185, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maestro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        String []str = o1.toString().split("\n");
        int r=0;
        r = (int) (Math.random()*100001);
        
        this.jTextArea1.append(str[0]+"\n");
        String []tiempo = str[0].split(":");
        int hs = Integer.parseInt(tiempo[0]);
        int ms = Integer.parseInt(tiempo[1]);
        int ss = Integer.parseInt(tiempo[2]);
        Calendar calendario = Calendar.getInstance();
        int h=calendario.get(Calendar.HOUR);
        int m=calendario.get(Calendar.MINUTE);
        int s=calendario.get(Calendar.SECOND);
        
        //String inser = r+"|"+ h+":"+m+":"+s +"|"+ hs+":"+ms+":"+ss +"|"+ str[3]+"|"+ str[1]+"|"+ Integer.parseInt(str[2])+"|"+ (h-hs)+":"+(m-ms)+":"+(s-ss)+"\n";
        /*Insertar dat1 = new Insertar(conR, 0, r, h+":"+m+":"+s, hs+":"+ms+":"+ss, str[3], str[1], Integer.parseInt(str[2]), (h-hs)+":"+(m-ms)+":"+(s-ss)+":");
        dat1.start();*/
       /* Insertar dat2 = new Insertar(conR, 1, r, h+":"+m+":"+s, hs+":"+ms+":"+ss, str[3], str[1], Integer.parseInt(str[2]), (h-hs)+":"+(m-ms)+":"+(s-ss)+":");
        dat2.start();
        Insertar dat3 = new Insertar(conR, 2, r, h+":"+m+":"+s, hs+":"+ms+":"+ss, str[3], str[1], Integer.parseInt(str[2]), (h-hs)+":"+(m-ms)+":"+(s-ss)+":");
        dat3.start();*/        
        /*Identificamos el usuario si es nuestro servidor maestro con el 1, 2 cliente*/
        Cliente c = new Cliente(6008,h+":"+m+":"+s+"\nMaestro\n",str[3]);
        Thread t1 = new Thread(c);
        t1.start();
    }
}
